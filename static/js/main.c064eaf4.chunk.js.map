{"version":3,"sources":["components/InputValue.js","components/TodoItem.js","components/TodoList.js","containers/App.js","serviceWorker.js","index.js"],"names":["InputValue","item","handleOnChange","handleSubmit","editItem","Fragment","className","onSubmit","type","placeholder","value","onChange","TodoItem","deleteItem","id","handleEditItem","length","onClick","TodoList","inputItems","clearItem","map","key","App","state","uuid","e","setState","target","preventDefault","newItem","updatedItems","console","log","filteredItems","filter","selectedItem","find","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c064eaf4.chunk.js","sourcesContent":["\timport React from 'react';\n\t\n\tconst InputValue =({item,handleOnChange,handleSubmit,editItem})=>{\n\t\t\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t<div className='card card-body my-3'>\n\t\t\t\t <form onSubmit={handleSubmit}>\n\t\t\t\t   <div className='input-group'>\n\t\t\t\t    <div className='input-group-prepend'>\n\t\t\t\t     <div className='input-group-text bg-primary text-white'>\n\t\t\t\t      <i className='fas fa-book'></i>\n\t\t\t\t      </div>\n\t\t\t\t     </div>\n\t\t\t\t\t\t<input type='text' \n\t\t\t\t\t\tplaceholder='enter the item name'\n\t\t\t\t\t\tclassName='form-control text-capitalize'\n\t\t\t\t\t\tvalue={item}\n                        onChange={handleOnChange}\n\t\t\t\t\t\t/>\n\t\t\t\t </div>\n\t\t\t\t   <button \n\t\t\t\t   type='submit'\n\t\t\t\t    className={\n\t\t\t\t    \teditItem ?'btn btn-block btn-success text-uppercase mt-3':\n                                  'btn btn-block btn-primary text-uppercase mt-3'\n                              }>\n\t\t\t\t     {editItem ?'edit item':'add item'}\n\n\t\t\t\t    </button>\n\t\t\t\t </form>\n\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t\nexport default InputValue;","\timport React from 'react';\n\t\n\tconst TodoItem =({item,deleteItem,id,handleEditItem})=>{\n\t\t\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t{\n\t\t\t\titem.length>0 &&\n\t\t\t\t<li className=\"list-group-item text-capitalize d-flex justify-content-between my-2\">\n\t\t\t\t<h6>{item}</h6>\n\t\t\t\t<div className='todo-icon'>\n\t\t\t\t<span className='mx-2 text-success' \n\t\t\t\tonClick={()=> handleEditItem(id)}\n\t\t\t\t> \n\t\t\t\t<i className='fas fa-pen'></i></span>\n\t\t\t\t<span className='text-danger mx-2' \n\t\t\t\tonClick={()=> deleteItem(id)}> \n\t\t\t\t<i className='fas fa-trash'></i></span>\n\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t\nexport default TodoItem;","\timport React from 'react';\n\timport TodoItem from './TodoItem';\n\n\t\n\tconst TodoList =({inputItems,clearItem,deleteItem,handleEditItem})=>{\n\t\t\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t <ul className='list-group'>\n\t\t\t\t\t<h3 className='text-capitalize text-center text-info'>todo list</h3>\n\t\t\t\t\t\n\t\t\t\t\t\t{  inputItems.map((item)=>{\n\t\t\t\t\t\t\treturn<TodoItem \n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\titem={item.item}\n\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\tdeleteItem={deleteItem}\n\t\t\t\t\t\t\thandleEditItem={handleEditItem}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\n\t\t\t\t\t<button \n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='btn btn-block btn-danger mt-5 text-capitalize'\n\t\t\t\t\tonClick={clearItem}\n\t\t\t\t\t>clear\n\t\t\t\t\t</button>\n\t\t\t\t </ul>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t\nexport default TodoList;","import React, { Component } from 'react';\n\nimport './App.css';\nimport InputValue from '../components/InputValue';\nimport TodoList from '../components/TodoList';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport uuid from 'uuid';\n\nclass App extends Component {\n\n\tstate ={\n\t\tinputItems:[],\n\t\tid:uuid(),\n\t\titem:'',\n\t\teditItem:false\n\t}\n\n\thandleOnChange=(e)=>{\n     this.setState({item:e.target.value})\n\t}\n\n\thandleSubmit =(e)=>{\n\t\te.preventDefault();\n\t\tconst newItem={\n\t\t\tid:this.state.id,\n\t\t\titem:this.state.item\n\t\t}\n\t\n\t\tconst updatedItems=[...this.state.inputItems,newItem]\n\t\tthis.setState({\n\t\t\tinputItems:updatedItems,\n\t\t\titem:'',\n\t\t\tid:uuid(),\n\t\t\teditItem:false\n\t\t})\n\t}\n\n\n\tclearItem=()=>{\n      this.setState({inputItems:[] })\n\t}\n\n\n\tdeleteItem = (id)=>{\n\t\tconsole.log(id)\n       const filteredItems= this.state.inputItems.filter(item=>item.id !== id)\n       console.log(filteredItems)\n       this.setState({inputItems:filteredItems})\n\t}\n\n\thandleEditItem = (id)=>{\n\t\tconst filteredItems= this.state.inputItems.filter(item=>item.id !== id)\n\t\t\n\t\tconst selectedItem = this.state.inputItems.find(item=>item.id === id)\n\t\tconsole.log(selectedItem)\n\t\t this.setState({\n\t\t \tinputItems:filteredItems,\n\t\t \titem:selectedItem.item,\n\t\t \teditItem:true,\n\t\t \tid:id,\n\t\t \t\n\t\t })\n\t}\n\n\trender() {\n     return (\n     \t <div>\n     \t   <header className=\"App-header\">\n             <h1>todo App</h1>\n\n           </header>\n\t\t    <div className='container mt-5'>\n\t\t      <div className=\"row\">\n\t\t        <div className='col-10 mx-auto col-md-8 my-2'>\n\t\t         <h3 className='text-capitalize text-center'>\n\t\t          todo input\n                 </h3>\n   \n\t\t      <InputValue \n\t\t      item ={this.state.item}\n\t\t      handleOnChange={this.handleOnChange}\n\t\t      handleSubmit={this.handleSubmit}\n\t\t       editItem={this.state.editItem}\n\t\t      />\n\t\t      \n\t\t      <TodoList \n\t\t      inputItems={this.state.inputItems}\n\t\t      clearItem={this.clearItem}\n\t\t      deleteItem={this.deleteItem}\n\t\t      handleEditItem={this.handleEditItem}\n   \n\t\t       />\n\t\t     </div>\n\t\t    </div>\n\t\t   </div> \n\t\t  </div>\n\t\t  );\n\t\t}\n\t\t}\nexport default App;\n\n\n  \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}